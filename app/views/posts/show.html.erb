<nav>
    <div class="nav-wrapper">
            <%= link_to @region.region_name, root_path, class: "breadcrumb" %>
            <%= link_to @prefecture.prefecture_name, prefecture_path(@prefecture), class: "breadcrumb" %>
            <%= link_to @municipality.municipality_name, municipality_path(@municipality), class: "breadcrumb" %>
            <%= link_to @post.post_name, post_path(@post), class: "breadcrumb" %>
    </div>
</nav>

  <% if @post.end_user == current_end_user %>
    <br>
    <%= link_to "記事を編集する", edit_post_path(@post), class: "btn" %>
    <%= link_to "記事を削除する", post_path(@post), method: :delete, class: "btn" %>
    <br>
    <br>
  <% end %>

<div class="post-content">
    <nav>
      <div class="left post-content-title"><%= @post.post_name%></div>
      <% if @end_user.nickname.blank? %>
        <div class="right post-content-author">by <%= link_to @end_user.name, end_user_path(@end_user) %></div>
      <% else %>
        <div class="right post-content-author">by <%= link_to @end_user.nickname, end_user_path(@end_user) %></div>
      <% end %>
    </nav>

    <div class="post-content-tag">
      <% @post_tags.each do |t| %>
        <%= link_to t.tag.tag_name, tag_path(t.tag_id), class:"chip" %>
      <% end %>
    </div>

    <div class="post-content-image-area clearfix">
      <div class="post-content-photo">
        <div class="carousel carousel-slider">
          <% @post_images.each do |p| %>
            <div id="hover-area-<%= p.id %>">
              <%= image_tag p.post_image_id.to_s, id: "photo-content", class: "carousel-item" %>
            </div>
            <p class="photo-comment-box"><%= p.post_image_comment %></p>
            <br>
                  <script>
                  $(function () {
                    $('#hover-area-<%= p.id %>').hover(function() {
                      $(this).next('p').show();
                    }, function(){
                      $(this).next('p').hide();
                    });
                  });
                  </script>
          <% end %>
        </div>
      </div>
      <div class="post-content-video">
        <%= video_tag @post.video_url.to_s,loop: true, controls: true, id: "video-content" %>
      </div>
    </div>

      <div class="post-content-rating">
        <% if @end_user.icon_image_id.present? %>
          <% if @end_user.nickname.blank? %>
            <h4><%= image_tag @end_user.icon_image_id.to_s, size: "50x50", class: "user-icon" %> <%= @end_user.name %>さんの評価</h4>
          <% else %>
            <h4><%= image_tag @end_user.icon_image_id.to_s, size: "50x50", class: "user-icon" %> <%= @end_user.nickname %>さんの評価</h4>
          <% end %>

        <% else %>
          <% if @end_user.nickname.blank? %>
            <h4><%= image_tag("no_image.png", size: "50x50", class:"user-icon") %> <%= @end_user.name %>さんの評価</h4>
          <% else %>
            <h4><%= image_tag("no_image.png", size: "50x50", class:"user-icon") %> <%= @end_user.nickname %>さんの評価</h4>
          <% end %>
        <% end %>

        <p>おすすめ度：<%= @post.rating %>点</p>
        <div id="star-rate"></div>
        <br>
        <p>予算：<%= @post.budget %></p>
        <br>
        <%= @post.body %>
     </div>

      <div class="post-content-clip">
        <div id="clip-area">
         <%= render "clip_field", post: @post %>
        </div>
     </div>


      <div class="post-content-mapping">
        <br>
        〒<%= @post.zipcode %>
        <p id="post-map-address">
          <%= @prefecture.prefecture_name %><%= @municipality.municipality_name %><%= @post.address %></p>
          <div id="post-map"></div>
        <br>
          <div id="post-direction"></div>
          <div id="post-distance"></div>
          <div id="post-duration"></div>
        <br>
        <button onclick="getPosition();" class="btn">この場所に行く</button>
      </div>



      <div class="post-content-comment">
          <h4><i class=" small material-icons comment-icon">comment</i> Comment</h4>
          <% if end_user_signed_in? %>
            <%= form_with( model: @comment_new) do |f| %>
                <%= f.text_field :content, autofocus: true, class:"form-control", placeholder: "コメントを入力" %>
                <br>
                <%= f.hidden_field :post_id, :value => @post.id %>
                <%= f.submit "送信", class:"btn" %>
            <% end %>
          <% end %>
          <br>
          <div id="reload-comment-area">
            <%= render partial: 'posts/post_comments', collection: @comments, as: "comment" %>
          </div>
          <div id="reload-pagenation-area">
            <%= paginate @comments, class: "paginate" %>
          </div>
      </div>

</div>

<script>
$(document).on('turbolinks:load', function() {
  $('#star-rate').raty({
    size: 36,
    starOff:  '<%= asset_path('star-off.png') %>',
    starOn : '<%= asset_path('star-on.png') %>',
    starHalf: '<%= asset_path('star-half.png') %>',
    half: true,
    readOnly: true,
    score: <%= @post.rating %>
  });
});
</script>

<script>
//画像スライド
document.addEventListener('turbolinks:load', function() {
  var elems = document.querySelectorAll('.carousel');
  // ここでオプションを指定。今回はなし
  var options = {
    fullWidth: true,
    indicators: true
  }
  M.Carousel.init(elems, options);
});
</script>

<script>
let map
let geocoder

function initMap(){
  // geocoderを初期化
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('post-map'), {
    center: {lat: 35.69, lng: 139.644},
    zoom: 16
  });

  // 入力を取得
  let inputAddress = document.getElementById('post-map-address').textContent;

  // geocodingしたあとmapを移動
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
　　　　　　　　　　　　// map.setCenterで地図が移動
      map.setCenter(results[0].geometry.location);
　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}
</script>


<script>
    if (navigator.geolocation) {
      // Geolocation APIに対応している
    } else {
      alert("この端末では位置情報が取得できません");
    }
    // 現在地取得処理
    function getPosition() {
      // 現在地を取得
      navigator.geolocation.getCurrentPosition(
        // 取得成功した場合
        function(position) {
            var current = {
              lat: position.coords.latitude, // 緯度
              lng: position.coords.longitude // 経度
            };
            //alert("緯度:"+position.coords.latitude+",経度"+position.coords.longitude);
          marker = new google.maps.Marker({
            map: map,
            position: current
          });
        search(current)
        },
        // 取得失敗した場合
        function(error) {
          switch(error.code) {
            case 1: //PERMISSION_DENIED
              alert("位置情報の利用が許可されていません");
              break;
            case 2: //POSITION_UNAVAILABLE
              alert("現在位置が取得できませんでした");
              break;
            case 3: //TIMEOUT
              alert("タイムアウトになりました");
              break;
            default:
              alert("その他のエラー(エラーコード:"+error.code+")");
              break;
          }
        }
      );
    }
///////////////////
function search(current) {

  // 目的地のgeocoding
  let iAddress = document.getElementById('post-map-address').textContent;
  let dest

////
  let options = {
    zoom: 16,
    center: new google.maps.LatLng(current),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  let rendererOptions = {
    map: map, // 描画先の地図
    draggable: true, // ドラッグ可
    preserveViewport: true // centerの座標、ズームレベルで表示
  };
  let directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
  let directionsService = new google.maps.DirectionsService();
  directionsDisplay.setMap(map);

  let request = {
    origin: new google.maps.LatLng(current), // スタート地点
    destination: iAddress, // ゴール地点
    travelMode: google.maps.DirectionsTravelMode.DRIVING, // 移動手段
  };
  directionsService.route(request, function(response,status) {
    if (status === google.maps.DirectionsStatus.OK) {
      new google.maps.DirectionsRenderer({
        map: map,
        directions: response,
        suppressMarkers: true // デフォルトのマーカーを削除
      });
      //経路情報をJSONから取り出す
      console.log(response);
      document.getElementById('post-direction').innerHTML = response.routes[0].legs[0].start_address + "から<br>" + response.routes[0].legs[0].end_address + "への経路"
      document.getElementById('post-distance').innerHTML = "距離:" +response.routes[0].legs[0].distance.text
      document.getElementById('post-duration').innerHTML = "所要時間:" + response.routes[0].legs[0].duration.text + " " + response.routes[0].summary + "ルート"
    }
  });
}

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC5LbkYIm6WbRn2Ddzo8bDxwS0jSinnRnI&callback=initMap" async defer></script>